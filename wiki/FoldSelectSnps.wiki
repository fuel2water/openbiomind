_FoldSelectSNPs_ is much like a version of DatasetTransformer specifically adapted to deal with SNP datasets.

SNPs, or Single-Nucleotide Polymorphisms, basically represent allelic information focused of the level of individual bases instead of whole genes. A SNP value will be thus typically represented by pairs of symbols representing possible allelic pairings, for instance AA, AB and BB. Therefore, SNP data is _discrete_, in oposition to gene expression data, which is represented by continuous numeric values.

Therefore, the !OpenBiomind format for SNP datasets is extremely similar to the gene expression data, with just two differences:

  * Instead of numbers values of feature x sample are pairs of characters. Character '0'  is considered special, meaning a "no call" or "indetermined" SNP.
  * There is no description column. While description columns often make sense as a way to describe a gene in an expression dataset, SNPs rarely (if ever) have particular descriptions, and are often analysed relatively to the genes of which they are part.

Therefore, the structure of an !OpenBiomind SNP dataset with _n_ samples and _m_ SNPs is:

{{{
         \t sample id 1 \t sample id 2 \t ... \t sample id n
snp id 1 \t pair 1,1    \t pair 1,2    \t ... \t pair 1,n
snp id 2 \t pair 2,1    \t pair 2,2    \t ... \t pair 2,n
.
.
.
snp id m \t pair m,1    \t pair m,2    \t ... \t pair m,n
}}}

And the upper-left "corner" of a real !OpenBiomind SNP dataset looks like:

{{{
              MAYO_10139 MAYO_10198 MAYO_102246 ...
              1          2          2           ...
SNP_A-2009808 42         42         00          ...
SNP_A-2260965 31         31         11          ...
SNP_A-4231989 22         22         22          ...
.
.
.
}}}

The convention of pairs of characters (numbers in the case above) meaning pairs of bases is found in other formats like PED/MAP and may help the user in the task of scripting an !OpenBiomind base dataset file from other sources.

Anyhow, _FoldSelectSNPs_, among other transformations such as folding and selection, in fact converts the base format described above into a "pseudo-numeric" format exactly equal to the one used for gene expression data, as will be shown ahead. That somehow awkward format transformation is a design option chosen for dealing with historical circumstances: since most of the framework of OpenBiomind was designed for dealing at first with gene expression data, using a pseudo-float representation for SNPs allows the user the possibility of applying many of the pre-existing OpenBiomind features to SNP data.

The syntax of the FoldSelectSNPs command is:

{{{
}}}